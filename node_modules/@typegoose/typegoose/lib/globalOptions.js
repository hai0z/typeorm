"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapValueToSeverity = exports.parseENV = exports.setGlobalOptions = void 0;
const constants_1 = require("./internal/constants");
const data_1 = require("./internal/data");
const utils_1 = require("./internal/utils");
const logSettings_1 = require("./logSettings");
/**
 * Set Typegoose's global Options
 */
function setGlobalOptions(options) {
    (0, utils_1.assertion)(typeof options === 'object', new TypeError('"options" argument needs to be an object!'));
    logSettings_1.logger.info('"setGlobalOptions" got called with', options);
    for (const key of Object.keys(options)) {
        data_1.globalOptions[key] = Object.assign({}, data_1.globalOptions[key], options[key]);
    }
    logSettings_1.logger.info('new Global Options:', options);
}
exports.setGlobalOptions = setGlobalOptions;
/**
 * Parse Typegoose Environment Variables and apply them
 */
function parseENV() {
    var _a;
    logSettings_1.logger.info('"parseENV" got called');
    const options = {
        globalOptions: {},
        options: {
            allowMixed: process.env.TG_ALLOW_MIXED && process.env.TG_ALLOW_MIXED in constants_1.Severity
                ? mapValueToSeverity(process.env.TG_ALLOW_MIXED)
                : (_a = data_1.globalOptions.options) === null || _a === void 0 ? void 0 : _a.allowMixed,
        },
    };
    setGlobalOptions(options);
}
exports.parseENV = parseENV;
/**
 * Maps strings to the number
 * -> This function is specifically build for "Severity"-Enum
 * @throws {Error} if not in range of the "Severity"-Enum
 * @example
 * ```ts
 * mapValueToSeverity("WARN") === 1
 * mapValueToSeverity("1") === 1
 * // now internal use
 * mapValueToSeverity(1) === 1
 * ```
 * @param value The value to check for
 * @internal
 */
function mapValueToSeverity(value) {
    (0, utils_1.assertion)(value in constants_1.Severity, new Error(`"value" is not in range of "Severity"! (got: ${value})`));
    if (typeof value === 'number') {
        return value;
    }
    return mapValueToSeverity(constants_1.Severity[value]);
}
exports.mapValueToSeverity = mapValueToSeverity;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsT3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9nbG9iYWxPcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG9EQUFnRDtBQUNoRCwwQ0FBZ0Q7QUFDaEQsNENBQTZDO0FBQzdDLCtDQUF1QztBQUd2Qzs7R0FFRztBQUNILFNBQWdCLGdCQUFnQixDQUFDLE9BQXVCO0lBQ3RELElBQUEsaUJBQVMsRUFBQyxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUUsSUFBSSxTQUFTLENBQUMsMkNBQTJDLENBQUMsQ0FBQyxDQUFDO0lBRW5HLG9CQUFNLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTNELEtBQUssTUFBTSxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUN0QyxvQkFBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLG9CQUFhLENBQUMsR0FBRyxDQUFDLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDMUU7SUFFRCxvQkFBTSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBVkQsNENBVUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLFFBQVE7O0lBQ3RCLG9CQUFNLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7SUFFckMsTUFBTSxPQUFPLEdBQW1CO1FBQzlCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLE9BQU8sRUFBRTtZQUNQLFVBQVUsRUFDUixPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsSUFBSSxvQkFBUTtnQkFDbEUsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO2dCQUNoRCxDQUFDLENBQUMsTUFBQSxvQkFBYSxDQUFDLE9BQU8sMENBQUUsVUFBVTtTQUN4QztLQUNGLENBQUM7SUFFRixnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBZEQsNEJBY0M7QUFFRDs7Ozs7Ozs7Ozs7OztHQWFHO0FBQ0gsU0FBZ0Isa0JBQWtCLENBQUMsS0FBc0I7SUFDdkQsSUFBQSxpQkFBUyxFQUFDLEtBQUssSUFBSSxvQkFBUSxFQUFFLElBQUksS0FBSyxDQUFDLGdEQUFnRCxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFbEcsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDN0IsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELE9BQU8sa0JBQWtCLENBQUMsb0JBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFSRCxnREFRQyJ9